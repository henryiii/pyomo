name: Pyomo Release Distribution Creation

on:
  push:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Hash (Optional)
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  native_wheels:
    name: Build wheels (${{ matrix.wheel-version }}) on ${{ matrix.os }} for native and cross-compiled architecture
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        arch: [all]
        wheel-version: ['cp39*', 'cp312*']
        include:
        - wheel-version: 'cp39*'
          TARGET: 'py39'
          GLOBAL_OPTIONS: "--with-cython --with-distributable-extensions"
        - wheel-version: 'cp312*'
          TARGET: 'py312'
          GLOBAL_OPTIONS: "--without-cython --with-distributable-extensions"

        exclude:
        - wheel-version: 'cp312*'
          os: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        with:
          output-dir: dist
        env:
            CIBW_ARCHS_LINUX: "native"
            CIBW_ARCHS_MACOS: "x86_64 arm64"
            CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
            CIBW_BUILD: ${{ matrix.wheel-version }}
            CIBW_SKIP: "*-musllinux*"
            CIBW_BUILD_VERBOSITY: 1
            CIBW_BEFORE_BUILD: pip install cython pybind11
            CIBW_ENVIRONMENT: PYOMO_SETUP_ARGS="${{ matrix.GLOBAL_OPTIONS }}"
      - uses: actions/upload-artifact@v4
        with:
          name: native_wheels-${{ matrix.os }}-${{ matrix.TARGET }}
          path: dist/*.whl
          overwrite: true

